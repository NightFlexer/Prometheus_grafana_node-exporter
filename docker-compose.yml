version: '3.8'

networks:
  monitoring:
    driver: bridge

      
volumes:
    prometheus: {}
    grafana: {}
    nginx: {}
    postgres_data:
      driver: local
      
services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

    restart: always
    privileged: true

  grafana:
    image: grafana/grafana:5.1.0
    ports:
      - 3000:3000
    user: '104'
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana:/var/lib/grafanaspec ap
      - ./datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml  # Add datasources, need spec ip
      - ./local.yml:/etc/grafana/provisioning/dashboards/local.yml #add dashboard
      - ./Prometheus 2.0.json:/var/lib/grafana/dashboards/Prometheus 2.0.json  #add dashboard
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    environment:
      VIRTUAL_HOST: grafana.domain.com

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090

  postgres:
    image: postgres:9.6
    volumes:
    - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: jbpm
      POSTGRES_USER: jbpm
      POSTGRES_PASSWORD: jbpm
    networks:
      - monitoring

  jbpm:
    image: jboss/jbpm-server-full
    environment:
      VIRTUAL_HOST: jbpm.domain.com
      JBPM_DB_DRIVER: postgres
      JBPM_DB_HOST: postgres
    ports:
    - 8080:8080
    - 8001:8001
    - 9990:9900
    depends_on:
    - postgres
    networks:
      - monitoring:
